diff --git a/EmBencode.h b/EmBencode.h
index 9e91722..87aa8ef 100644
--- a/EmBencode.h
+++ b/EmBencode.h
@@ -13,14 +13,14 @@ public:
   
   /// Push a string out in Bencode format.
   /// @param str The zero-terminated string to send out (without trailing \0).
-  static void push (const char* str) {
+  void push (const char* str) {
     push(str, strlen(str));
   }
 
   /// Push arbitrary bytes in Bencode format.
   /// @param ptr Pointer to the data to send out.
   /// @param len Number of data bytes to send out.
-  static void push (const void* ptr, uint8_t len) {
+  void push (const void* ptr, uint8_t len) {
     PushCount(len);
     PushChar(':');
     PushData(ptr, len);
@@ -28,7 +28,7 @@ public:
 
   /// Push a signed integer in Bencode format.
   /// @param val The integer to send (this implementation supports 32 bits).
-  static void push (long val) {
+  void push (long val) {
     PushChar('i');
     if (val < 0) {
       PushChar('-');
@@ -40,53 +40,53 @@ public:
 
   /// Start a new new list. Must be matched with a call to endList().
   /// Entries can be nested with more calls to startList(), startDict(), etc.
-  static void startList () {
+  void startList () {
     PushChar('l');
   }
 
   /// Terminate a list, started earlier with a call to startList().
-  static void endList () {
+  void endList () {
     PushEnd();
   }
 
   /// Start a new new dictionary. Must be matched with a call to endDict().
   /// Dictionary entries must consist of a string key plus an arbitrary value.
   /// Entries can be nested with more calls to startList(), startDict(), etc.
-  static void startDict () {
+  void startDict () {
     PushChar('d');
   }
 
   /// Terminate a dictionary, started earlier with a call to startDict().
-  static void endDict () {
+  void endDict () {
     PushEnd();
   }
 
 protected:
   //Works
-  static void PushCount (uint32_t num) {
+  void PushCount (uint32_t num) {
     char buf[11] = {};
     ultoa(num, buf, 10);
     PushData(buf, strlen(buf));
   }
 
   //doesn't work always
-//  static void PushCount (uint32_t num) {
+//  void PushCount (uint32_t num) {
 //    char buf[11];
 //    PushData(ultoa(num, buf, 10), strlen(buf));
 //  }
 
-  static void PushEnd () {
+  void PushEnd () {
     PushChar('e');
   }
 
-  static void PushData (const void* ptr, uint8_t len) {
+  void PushData (const void* ptr, uint8_t len) {
     for (const char* p = (const char*) ptr; len-- > 0; ++p)
       PushChar(*p);
   }
 
-  /// This function is not implemented in the library. It must be supplied by
-  /// the caller to implement the actual writing of caharacters.
-  static void PushChar (char ch);
+  /// This function is not implemented in the library. It must be supplied by the caller
+  /// or inherited from `EmBencode` to implement the actual writing of characters.
+  virtual void PushChar (char ch);
 };
 
 /// Decoder class, needs an external buffer to collect the incoming data.
